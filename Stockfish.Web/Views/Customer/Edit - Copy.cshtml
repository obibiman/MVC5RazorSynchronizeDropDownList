@model Stockfish.DataAccess.Model.Customer

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Customer</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.SalutationId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("SalutationId", string.Empty)
            @Html.ValidationMessageFor(model => model.SalutationId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Street1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Street1)
            @Html.ValidationMessageFor(model => model.Street1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Street2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Street2)
            @Html.ValidationMessageFor(model => model.Street2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CountryId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("CountryId", string.Empty)
            @Html.ValidationMessageFor(model => model.CountryId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StateCode)
        </div>
        <div class="editor-field">
            @Html.DropDownList("StateCode", string.Empty)
            @Html.ValidationMessageFor(model => model.StateCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PostalCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PostalCode)
            @Html.ValidationMessageFor(model => model.PostalCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PhoneNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PhoneNumber)
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>

        <p>
            <input type="submit" value="Save"/>
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function() {
            $('#CountryId').change(function() {
                $('#StateCode').html('');
                $.getJSON('@Url.Action("GetStateValues")', { countryId: $('#CountryId').val() }, function(data) {
                    var items = "";
                    $.each(data, function(i, item) {
                        $("#StateCode").append('<option value="' + item.Code + '">' + item.Name + '</option>');
                    });
                });
            });
        });
    </script>

}